# Dockerfile for ProScrape Celery Workers
# Optimized for scraping tasks with Playwright support
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PLAYWRIGHT_BROWSERS_PATH=/ms-playwright

# Install system dependencies for Playwright and scraping
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    procps \
    xvfb \
    curl \
    gcc \
    g++ \
    libnss3 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxkbcommon0 \
    libgtk-3-0 \
    libgbm-dev \
    libasound2 \
    && rm -rf /var/lib/apt/lists/*

# Create app user for security
RUN useradd --create-home --shell /bin/bash proscrape

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Install Playwright browsers
RUN playwright install chromium
RUN playwright install-deps chromium

# Copy application code
COPY . .

# Remove unnecessary files for workers
RUN rm -rf tests/ frontend/ *.md dev*.py debug*.py test*.py \
    && find . -name "*.pyc" -delete \
    && find . -name "__pycache__" -type d -exec rm -rf {} + || true

# Change ownership to app user
RUN chown -R proscrape:proscrape /app

# Switch to app user
USER proscrape

# Set Python path
ENV PYTHONPATH=/app

# Health check for Celery workers
HEALTHCHECK --interval=60s --timeout=30s --start-period=10s --retries=3 \
    CMD celery -A tasks.celery_app inspect ping || exit 1

# Default command (can be overridden in docker-compose)
CMD ["celery", "-A", "tasks.celery_app", "worker", "--loglevel=info", "--concurrency=2"]